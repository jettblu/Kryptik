/**
 * Minified by jsDelivr using Terser v5.3.0.
 * Original file: /npm/hdkey@2.0.1/lib/hdkey.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var assert=require("assert"),Buffer=require("safe-buffer").Buffer,crypto=require("crypto"),bs58check=require("bs58check"),secp256k1=require("secp256k1"),MASTER_SECRET=Buffer.from("Bitcoin seed","utf8"),HARDENED_OFFSET=2147483648,LEN=78,BITCOIN_VERSIONS={private:76066276,public:76067358};function HDKey(e){this.versions=e||BITCOIN_VERSIONS,this.depth=0,this.index=0,this._privateKey=null,this._publicKey=null,this.chainCode=null,this._fingerprint=0,this.parentFingerprint=0}function serialize(e,t,i){var r=Buffer.allocUnsafe(LEN);r.writeUInt32BE(t,0),r.writeUInt8(e.depth,4);var n=e.depth?e.parentFingerprint:0;return r.writeUInt32BE(n,5),r.writeUInt32BE(e.index,9),e.chainCode.copy(r,13),i.copy(r,45),r}function hash160(e){var t=crypto.createHash("sha256").update(e).digest();return crypto.createHash("ripemd160").update(t).digest()}Object.defineProperty(HDKey.prototype,"fingerprint",{get:function(){return this._fingerprint}}),Object.defineProperty(HDKey.prototype,"identifier",{get:function(){return this._identifier}}),Object.defineProperty(HDKey.prototype,"pubKeyHash",{get:function(){return this.identifier}}),Object.defineProperty(HDKey.prototype,"privateKey",{get:function(){return this._privateKey},set:function(e){assert.equal(e.length,32,"Private key must be 32 bytes."),assert(!0===secp256k1.privateKeyVerify(e),"Invalid private key"),this._privateKey=e,this._publicKey=Buffer.from(secp256k1.publicKeyCreate(e,!0)),this._identifier=hash160(this.publicKey),this._fingerprint=this._identifier.slice(0,4).readUInt32BE(0)}}),Object.defineProperty(HDKey.prototype,"publicKey",{get:function(){return this._publicKey},set:function(e){assert(33===e.length||65===e.length,"Public key must be 33 or 65 bytes."),assert(!0===secp256k1.publicKeyVerify(e),"Invalid public key"),this._publicKey=Buffer.from(secp256k1.publicKeyConvert(e,!0)),this._identifier=hash160(this.publicKey),this._fingerprint=this._identifier.slice(0,4).readUInt32BE(0),this._privateKey=null}}),Object.defineProperty(HDKey.prototype,"privateExtendedKey",{get:function(){return this._privateKey?bs58check.encode(serialize(this,this.versions.private,Buffer.concat([Buffer.alloc(1,0),this.privateKey]))):null}}),Object.defineProperty(HDKey.prototype,"publicExtendedKey",{get:function(){return bs58check.encode(serialize(this,this.versions.public,this.publicKey))}}),HDKey.prototype.derive=function(e){if("m"===e||"M"===e||"m'"===e||"M'"===e)return this;var t=e.split("/"),i=this;return t.forEach((function(e,t){if(0!==t){var r=e.length>1&&"'"===e[e.length-1],n=parseInt(e,10);assert(n<HARDENED_OFFSET,"Invalid index"),r&&(n+=HARDENED_OFFSET),i=i.deriveChild(n)}else assert(/^[mM]{1}/.test(e),'Path must start with "m" or "M"')})),i},HDKey.prototype.deriveChild=function(e){var t,i=e>=HARDENED_OFFSET,r=Buffer.allocUnsafe(4);if(r.writeUInt32BE(e,0),i){assert(this.privateKey,"Could not derive hardened child key");var n=this.privateKey,s=Buffer.alloc(1,0);n=Buffer.concat([s,n]),t=Buffer.concat([n,r])}else t=Buffer.concat([this.publicKey,r]);var p=crypto.createHmac("sha512",this.chainCode).update(t).digest(),c=p.slice(0,32),a=p.slice(32),o=new HDKey(this.versions);if(this.privateKey)try{o.privateKey=Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(this.privateKey),c))}catch(t){return this.deriveChild(e+1)}else try{o.publicKey=Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(this.publicKey),c,!0))}catch(t){return this.deriveChild(e+1)}return o.chainCode=a,o.depth=this.depth+1,o.parentFingerprint=this.fingerprint,o.index=e,o},HDKey.prototype.sign=function(e){return Buffer.from(secp256k1.ecdsaSign(e,this.privateKey).signature)},HDKey.prototype.verify=function(e,t){return secp256k1.ecdsaVerify(Uint8Array.from(t),Uint8Array.from(e),Uint8Array.from(this.publicKey))},HDKey.prototype.wipePrivateData=function(){return this._privateKey&&crypto.randomBytes(this._privateKey.length).copy(this._privateKey),this._privateKey=null,this},HDKey.prototype.toJSON=function(){return{xpriv:this.privateExtendedKey,xpub:this.publicExtendedKey}},HDKey.fromMasterSeed=function(e,t){var i=crypto.createHmac("sha512",MASTER_SECRET).update(e).digest(),r=i.slice(0,32),n=i.slice(32),s=new HDKey(t);return s.chainCode=n,s.privateKey=r,s},HDKey.fromExtendedKey=function(e,t){var i=new HDKey(t=t||BITCOIN_VERSIONS),r=bs58check.decode(e),n=r.readUInt32BE(0);assert(n===t.private||n===t.public,"Version mismatch: does not match private or public"),i.depth=r.readUInt8(4),i.parentFingerprint=r.readUInt32BE(5),i.index=r.readUInt32BE(9),i.chainCode=r.slice(13,45);var s=r.slice(45);return 0===s.readUInt8(0)?(assert(n===t.private,"Version mismatch: version does not match private"),i.privateKey=s.slice(1)):(assert(n===t.public,"Version mismatch: version does not match public"),i.publicKey=s),i},HDKey.fromJSON=function(e){return HDKey.fromExtendedKey(e.xpriv)},HDKey.HARDENED_OFFSET=HARDENED_OFFSET,module.exports=HDKey;
//# sourceMappingURL=/sm/c2ca43f78608ccd75aa8978b11f4af5469281d2bacaeb1f7019ae281eb4b9e3e.map